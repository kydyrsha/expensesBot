import { Telegraf } from 'telegraf'
import { config } from 'dotenv'
import cron from 'node-cron'
import { loadExpenses, saveExpenses } from './storage'
import { parseAmount } from './utils'

config()
const bot = new Telegraf(process.env.BOT_TOKEN!)

let expenses = loadExpenses()

bot.on('text', (ctx) => {
    const userId = String(ctx.from.id)
    const amount = parseAmount(ctx.message.text)

    if (amount !== null) {
        if (!expenses[userId]) expenses[userId] = []
        expenses[userId].push(amount)
        saveExpenses(expenses)

        ctx.reply(`üí∏ –ó–∞–ø–∏—Å–∞–ª: ${amount}‚Ç∏`)
    } else {
        ctx.reply('–ù–∞–ø–∏—à–∏ —Å—É–º–º—É —Ä–∞—Å—Ö–æ–¥–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä: 1200 –∏–ª–∏ 500.50')
    }
})

// –†–∞—Å—Å—ã–ª–∫–∞ –≤ 23:59 –∫–∞–∂–¥—ã–π –¥–µ–Ω—å
cron.schedule('59 23 * * *', async () => {
    for (const [userId, amounts] of Object.entries(expenses)) {
        const total = amounts.reduce((sum, val) => sum + val, 0)
        await bot.telegram.sendMessage(userId, `üìä –°–µ–≥–æ–¥–Ω—è —Ç—ã –ø–æ—Ç—Ä–∞—Ç–∏–ª: ${total.toFixed(2)}‚Ç∏`)
    }

    expenses = {} // –æ—á–∏—â–∞–µ–º
    saveExpenses(expenses)
})

bot.launch()
console.log('ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω')